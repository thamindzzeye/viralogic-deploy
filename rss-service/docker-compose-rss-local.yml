services:
  # RSS Service PostgreSQL Database
  rss-postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    command: postgres -p 1725
    volumes:
      - ../../docker_volumes/rss-service/postgres:/var/lib/postgresql/data
      - ../../docker_volumes_nobackup/rss-service/postgres:/tmp
    ports:
      - "1725:1725"
    networks:
      - rss-service-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-postgres,logging_stream=stdout"

  # RSS Service Redis Cache
  rss-redis:
    image: redis:7-alpine
    env_file:
      - .env
    command: sh -c "redis-server --port 1726 --requirepass $$REDIS_PASSWORD --appendonly yes --dir /data"
    volumes:
      - ../../docker_volumes/rss-service/redis:/data
      - ../../docker_volumes_nobackup/rss-service/redis:/tmp
    ports:
      - "1726:1726"
    networks:
      - rss-service-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-redis,logging_stream=stdout"

  # RSS Service Main Application
  rss-service:
    image: viralogic/rss-service:local
    env_file:
      - .env
    ports:
      - "1722:1722"
    command: uvicorn app.main:app --host 0.0.0.0 --port 1722
    volumes:
      - ../../docker_logs/rss-service:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-app,logging_stream=stdout"

  # RSS Service Celery Worker
  rss-celery-worker:
    image: viralogic/rss-service:local
    env_file:
      - .env
    command: celery -A app.celery.celery_app worker --loglevel=info
    volumes:
      - ../../docker_logs/rss-service:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "celery -A app.celery.celery_app inspect ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-celery-worker,logging_stream=stdout"

  # RSS Service Celery Beat
  rss-celery-beat:
    image: viralogic/rss-service:local
    env_file:
      - .env
    command: celery -A app.celery.celery_app beat --loglevel=info --schedule=/app/celerybeat-data/celerybeat-schedule
    volumes:
      - ../../docker_volumes_nobackup/rss-service/celery-beat:/app/celerybeat-data
      - ../../docker_logs/rss-service:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import subprocess; exit(0 if 'celery' in subprocess.check_output(['cat', '/proc/1/comm']).decode() else 1)\" || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-celery-beat,logging_stream=stdout"

  # RSS Service Flower (Celery Monitoring)
  rss-flower:
    image: mher/flower:2.0.1
    env_file:
      - .env
    ports:
      - "1727:1727"
    command: celery flower --port=1727
    volumes:
      - ../../docker_volumes_nobackup/rss-service/flower:/data
    depends_on:
      - rss-redis
      - rss-celery-worker
    networks:
      - rss-service-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-flower,logging_stream=stdout"

  # RSS Service Adminer - Database Management Interface
  rss-adminer:
    image: adminer:4.8.1
    ports:
      - "1801:1801"
    environment:
      ADMINER_DEFAULT_SERVER: rss-postgres:1725
      ADMINER_DESIGN: pepa-linha-dark
    command: php -S 0.0.0.0:1801
    depends_on:
      - rss-postgres
    networks:
      - rss-service-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:1801 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-adminer,logging_stream=stdout"

  # Cloudflare Tunnel for RSS Service
  cloudflared-rss:
    image: cloudflare/cloudflared:latest
    volumes:
      - ./cloudflared:/etc/cloudflared
    command: tunnel --config /etc/cloudflared/config.yml run viralogic-rss-production
    depends_on:
      - rss-service
    restart: unless-stopped
    networks:
      - rss-service-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "logging_jobname=rss-cloudflared,logging_stream=stdout"

networks:
  rss-service-network:
    driver: bridge
