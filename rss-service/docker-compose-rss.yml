services:
  # RSS Service PostgreSQL Database
  rss-postgres:
    image: postgres:15-alpine
    env_file:
      - .env
    command: postgres -p 1725
    volumes:
      - ../docker_volumes/rss-postgres:/var/lib/postgresql/data
      - ../docker_volumes_nobackup/rss-postgres:/tmp
    ports:
      - "1725:1725"
    networks:
      - rss-service-network
    restart: unless-stopped

  # RSS Service Redis Cache
  rss-redis:
    image: redis:7-alpine
    env_file:
      - .env
    command: redis-server --requirepass $RSS_REDIS_PASSWORD --appendonly yes --port 1726
    volumes:
      - ../docker_volumes/rss-redis:/data
      - ../docker_volumes_nobackup/rss-redis:/tmp
    ports:
      - "1726:1726"
    networks:
      - rss-service-network
    restart: unless-stopped

  # RSS Service Main Application
  rss-service:
    image: ghcr.io/thamindzzeye/viralogic/rss-service:main
    env_file:
      - .env
    ports:
      - "1722:1722"
    command: uvicorn app.main:app --host 0.0.0.0 --port 1722
    volumes:
      - ../docker_volumes_nobackup/rss-logs:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped

  # RSS Service Celery Worker
  rss-celery-worker:
    image: ghcr.io/thamindzzeye/viralogic/rss-service:main
    env_file:
      - .env
    command: celery -A app.celery.celery_app worker --loglevel=info
    volumes:
      - ../docker_volumes_nobackup/rss-logs:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped

  # RSS Service Celery Beat
  rss-celery-beat:
    image: ghcr.io/thamindzzeye/viralogic/rss-service:main
    env_file:
      - .env
    command: celery -A app.celery.celery_app beat --loglevel=info --schedule=/app/celerybeat-data/celerybeat-schedule
    volumes:
      - ../docker_volumes_nobackup/rss-celerybeat:/app/celerybeat-data
      - ../docker_volumes_nobackup/rss-logs:/logs
    depends_on:
      - rss-postgres
      - rss-redis
    networks:
      - rss-service-network
    restart: unless-stopped

  # RSS Service Flower (Celery Monitoring)
  rss-flower:
    image: mher/flower:2.0.1
    env_file:
      - .env
    ports:
      - "1727:1727"
    command: celery flower --port=1727
    volumes:
      - ../docker_volumes_nobackup/rss-flower:/data
    depends_on:
      - rss-redis
      - rss-celery-worker
    networks:
      - rss-service-network
    restart: unless-stopped

  # Cloudflare Tunnel for RSS Service
  cloudflared-rss:
    image: cloudflare/cloudflared:latest
    volumes:
      - ./cloudflared:/etc/cloudflared
    command: tunnel --config /etc/cloudflared/config.yml run viralogic-rss-production
    depends_on:
      - rss-service
    restart: unless-stopped
    networks:
      - rss-service-network

networks:
  rss-service-network:
    driver: bridge
